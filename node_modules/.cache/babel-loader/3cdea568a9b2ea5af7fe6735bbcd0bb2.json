{"ast":null,"code":"var _jsxFileName = \"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormLabel, makeStyles, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    backgroundColor: \"#4BFC7E\",\n    margin: \"0px 10px\"\n  },\n  // formGroup: {\n  //   gap: \"20px\",\n  //   display: \"grid\",\n  //   gridTemplateColumns: \"0.25fr 2fr\",\n  //   padding: \"10px\",\n  //   width: \"200px\",\n  // },\n  formGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    padding: \"5px\"\n  },\n  FormLeftLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\"\n  },\n  inputField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/8\"\n  },\n  // inputField: {\n  //   // gap: \"5px\",\n  //   // display: \"grid\",\n  //   // gridTemplateColumns: \"0.5fr 2fr\",\n  //   // padding: \"10px\",\n  //   border: \"1px solid black\",\n  //   backgroundColor: \"white\",\n  //   borderRadius: \"50px\",\n  //   width: \"500px\",\n  // },\n  remarksField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"25px\",\n    width: \"500px\",\n    height: \"60px\"\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\"\n  }\n});\n\nconst EmailInfoAdd = props => {\n  _s();\n\n  const classes = useStyles();\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    props.setData(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n    props.setErrors(prev => ({ ...prev,\n      [name]: \"\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email1\",\n          className: classes.inputField,\n          value: props.data.email1,\n          required: true,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email1,\n          error: Boolean(props.errors.email1),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email2\",\n          className: classes.inputField // value={props.data.email2}\n          ,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email2,\n          error: Boolean(props.errors.email2),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email3\",\n          className: classes.inputField // value={props.data.email3}\n          ,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email3,\n          error: Boolean(props.errors.email3),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Remarks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"remarks\" // value={props.data.remarks}\n          ,\n          className: classes.remarksField,\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: handleChange,\n          helperText: props.errors.remarks,\n          error: Boolean(props.errors.remarks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailInfoAdd, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EmailInfoAdd;\nexport default EmailInfoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailInfoAdd\");","map":{"version":3,"names":["React","FormLabel","makeStyles","TextField","useStyles","form","backgroundColor","margin","formGroup","display","gridTemplateColumns","padding","FormLeftLevel","gridColumn","color","inputField","border","borderRadius","remarksField","width","height","errorMessage","Color","EmailInfoAdd","props","classes","emailRegex","handleChange","event","name","value","target","setData","prev","setErrors","data","email1","disableUnderline","errors","Boolean","match","email2","email3","remarks"],"sources":["/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { FormLabel, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\";\nimport { formDataType, ErrorType } from \"../Homepage\";\n\ntype DemoFormProps = {\n  data: formDataType;\n  setData: React.Dispatch<React.SetStateAction<formDataType>>;\n  errors: ErrorType;\n  setErrors: React.Dispatch<React.SetStateAction<ErrorType>>;\n};\n\nconst useStyles = makeStyles({\n  form: {\n    backgroundColor: \"#4BFC7E\",\n    margin: \"0px 10px\",\n  },\n  // formGroup: {\n  //   gap: \"20px\",\n  //   display: \"grid\",\n  //   gridTemplateColumns: \"0.25fr 2fr\",\n  //   padding: \"10px\",\n  //   width: \"200px\",\n  // },\n  formGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    padding: \"5px\",\n  },\n  FormLeftLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\",\n  },\n  inputField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/8\",\n  },\n  // inputField: {\n  //   // gap: \"5px\",\n  //   // display: \"grid\",\n  //   // gridTemplateColumns: \"0.5fr 2fr\",\n  //   // padding: \"10px\",\n  //   border: \"1px solid black\",\n  //   backgroundColor: \"white\",\n  //   borderRadius: \"50px\",\n  //   width: \"500px\",\n  // },\n  remarksField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"25px\",\n    width: \"500px\",\n    height: \"60px\",\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\",\n  },\n});\n\nconst EmailInfoAdd: React.FC<DemoFormProps> = (props) => {\n  const classes = useStyles();\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    props.setData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n\n    props.setErrors((prev) => ({\n      ...prev,\n      [name]: \"\",\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form}>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 1</FormLabel>\n          <TextField\n            name=\"email1\"\n            className={classes.inputField}\n            value={props.data.email1}\n            required={true}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email1}\n            error={Boolean(props.errors.email1)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 2</FormLabel>\n          <TextField\n            name=\"email2\"\n            className={classes.inputField}\n            // value={props.data.email2}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email2}\n            error={Boolean(props.errors.email2)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 2</FormLabel>\n          <TextField\n            name=\"email3\"\n            className={classes.inputField}\n            // value={props.data.email3}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email3}\n            error={Boolean(props.errors.email3)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <label>Remarks</label>\n          {/* <TextareaAutosize aria-label=\"minimum height\" minRows={3} /> */}\n          <TextField\n            name=\"remarks\"\n            // value={props.data.remarks}\n            className={classes.remarksField}\n            InputProps={{ disableUnderline: true }}\n            onChange={handleChange}\n            helperText={props.errors.remarks}\n            error={Boolean(props.errors.remarks)}\n          />\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default EmailInfoAdd;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}