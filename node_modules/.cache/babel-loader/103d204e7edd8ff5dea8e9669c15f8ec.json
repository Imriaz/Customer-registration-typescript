{"ast":null,"code":"var _jsxFileName = \"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    border: \"1px solid black\",\n    // backgroundColor: \"#4BFC7E\",\n    // padding: \"20px 100px\",\n    margin: \"0px 10px\"\n  },\n  formGroup: {\n    // gap: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1.5fr 2fr\",\n    padding: \"10px\",\n    width: \"400px\"\n  },\n  inputField: {\n    border: \"1px solid black\",\n    borderRadius: \"50px\",\n    width: \"150px\"\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\"\n  }\n});\n\nconst BlackInformationAdd = props => {\n  _s();\n\n  const classes = useStyles(); // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    props.setData(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n    props.setErrors(prev => ({ ...prev,\n      [name]: \"\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"black information \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"blackInformation\",\n          className: classes.inputField,\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: handleChange,\n          helperText: props.errors.blackInformation,\n          error: Boolean(props.errors.blackInformation)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"black information note \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlackInformationAdd, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BlackInformationAdd;\nexport default BlackInformationAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackInformationAdd\");","map":{"version":3,"names":["React","makeStyles","TextField","useStyles","form","border","margin","formGroup","display","gridTemplateColumns","padding","width","inputField","borderRadius","errorMessage","Color","BlackInformationAdd","props","classes","handleChange","event","name","value","target","setData","prev","setErrors","disableUnderline","errors","blackInformation","Boolean"],"sources":["/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { makeStyles, Radio, RadioGroup, TextField } from \"@material-ui/core\";\nimport { formDataType, ErrorType } from \"../Homepage\";\n\ntype DemoFormProps = {\n  data: formDataType;\n  setData: React.Dispatch<React.SetStateAction<formDataType>>;\n  errors: ErrorType;\n  setErrors: React.Dispatch<React.SetStateAction<ErrorType>>;\n};\n\nconst useStyles = makeStyles({\n  form: {\n    border: \"1px solid black\",\n    // backgroundColor: \"#4BFC7E\",\n    // padding: \"20px 100px\",\n    margin: \"0px 10px\",\n  },\n  formGroup: {\n    // gap: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1.5fr 2fr\",\n    padding: \"10px\",\n    width: \"400px\",\n  },\n  inputField: {\n    border: \"1px solid black\",\n    borderRadius: \"50px\",\n    width: \"150px\",\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\",\n  },\n});\n\nconst BlackInformationAdd: React.FC<DemoFormProps> = (props) => {\n  const classes = useStyles();\n\n  // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    props.setData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n\n    props.setErrors((prev) => ({\n      ...prev,\n      [name]: \"\",\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form}>\n        <div className={classes.formGroup}>\n          <label>black information </label>\n          <TextField\n            name=\"blackInformation\"\n            className={classes.inputField}\n            InputProps={{ disableUnderline: true }}\n            onChange={handleChange}\n            helperText={props.errors.blackInformation}\n            error={Boolean(props.errors.blackInformation)}\n          />\n        </div>\n\n        <div className={classes.formGroup}>\n          <label>black information note </label>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default BlackInformationAdd;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAwCC,SAAxC,QAAyD,mBAAzD;;AAUA,MAAMC,SAAS,GAAGF,UAAU,CAAC;EAC3BG,IAAI,EAAE;IACJC,MAAM,EAAE,iBADJ;IAEJ;IACA;IACAC,MAAM,EAAE;EAJJ,CADqB;EAO3BC,SAAS,EAAE;IACT;IACAC,OAAO,EAAE,MAFA;IAGTC,mBAAmB,EAAE,WAHZ;IAITC,OAAO,EAAE,MAJA;IAKTC,KAAK,EAAE;EALE,CAPgB;EAc3BC,UAAU,EAAE;IACVP,MAAM,EAAE,iBADE;IAEVQ,YAAY,EAAE,MAFJ;IAGVF,KAAK,EAAE;EAHG,CAde;EAmB3BG,YAAY,EAAE;IACZC,KAAK,EAAE,KADK;IAEZL,OAAO,EAAE;EAFG;AAnBa,CAAD,CAA5B;;AAyBA,MAAMM,mBAA4C,GAAIC,KAAD,IAAW;EAAA;;EAC9D,MAAMC,OAAO,GAAGf,SAAS,EAAzB,CAD8D,CAG9D;;EAEA;AACF;AACA;;EACE,MAAMgB,YAAY,GAAIC,KAAD,IAAgD;IACnE,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IAEAN,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAU;MACtB,OAAO,EACL,GAAGA,IADE;QAEL,CAACJ,IAAD,GAAQC;MAFH,CAAP;IAID,CALD;IAOAL,KAAK,CAACS,SAAN,CAAiBD,IAAD,KAAW,EACzB,GAAGA,IADsB;MAEzB,CAACJ,IAAD,GAAQ;IAFiB,CAAX,CAAhB;EAID,CAdD;;EAgBA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAM,SAAS,EAAEH,OAAO,CAACd,IAAzB;MAAA,wBACE;QAAK,SAAS,EAAEc,OAAO,CAACX,SAAxB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,SAAD;UACE,IAAI,EAAC,kBADP;UAEE,SAAS,EAAEW,OAAO,CAACN,UAFrB;UAGE,UAAU,EAAE;YAAEe,gBAAgB,EAAE;UAApB,CAHd;UAIE,QAAQ,EAAER,YAJZ;UAKE,UAAU,EAAEF,KAAK,CAACW,MAAN,CAAaC,gBAL3B;UAME,KAAK,EAAEC,OAAO,CAACb,KAAK,CAACW,MAAN,CAAaC,gBAAd;QANhB;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAaE;QAAK,SAAS,EAAEX,OAAO,CAACX,SAAxB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA7CD;;GAAMS,mB;UACYb,S;;;KADZa,mB;AA+CN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}