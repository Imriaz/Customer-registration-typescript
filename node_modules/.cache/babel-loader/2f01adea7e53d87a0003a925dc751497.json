{"ast":null,"code":"var _jsxFileName = \"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormLabel, makeStyles, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    backgroundColor: \"#4BFC7E\",\n    margin: \"0px 10px\"\n  },\n  formGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    padding: \"5px\"\n  },\n  FormLeftLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\"\n  },\n  inputField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/8\"\n  },\n  inputFieldRemarks: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px\",\n    gridColumn: \"2/8\",\n    height: \"50px\"\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\"\n  }\n});\n\nconst EmailInfoAdd = props => {\n  _s();\n\n  const classes = useStyles();\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n  // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = event.target;\n  //   props.setData((prev) => {\n  //     return {\n  //       ...prev,\n  //       [name]: value,\n  //     };\n  //   });\n  //   props.setErrors((prev) => ({\n  //     ...prev,\n  //     [name]: \"\",\n  //   }));\n  // };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email1\",\n          className: classes.inputField,\n          required: true,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email1,\n          error: Boolean(props.errors.email1),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              props.handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email2\",\n          className: classes.inputField,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email2,\n          error: Boolean(props.errors.email2),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Email 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email3\",\n          className: classes.inputField,\n          InputProps: {\n            disableUnderline: true\n          },\n          helperText: props.errors.email3,\n          error: Boolean(props.errors.email3),\n          onChange: event => {\n            if (event.target.value.match(emailRegex)) {\n              handleChange(event);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.FormLeftLevel,\n          children: \"Remarks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"remarks\",\n          className: classes.inputFieldRemarks,\n          InputProps: {\n            disableUnderline: true\n          },\n          onChange: handleChange,\n          helperText: props.errors.remarks,\n          error: Boolean(props.errors.remarks)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmailInfoAdd, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EmailInfoAdd;\nexport default EmailInfoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailInfoAdd\");","map":{"version":3,"names":["React","FormLabel","makeStyles","TextField","useStyles","form","backgroundColor","margin","formGroup","display","gridTemplateColumns","padding","FormLeftLevel","gridColumn","color","inputField","border","borderRadius","inputFieldRemarks","height","errorMessage","Color","EmailInfoAdd","props","classes","emailRegex","disableUnderline","errors","email1","Boolean","event","target","value","match","handleChange","email2","email3","remarks"],"sources":["/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { FormLabel, makeStyles, TextField } from \"@material-ui/core\";\nimport { formDataType, ErrorType } from \"../Homepage\";\n\ntype DemoFormProps = {\n  data: formDataType;\n  setData: React.Dispatch<React.SetStateAction<formDataType>>;\n  errors: ErrorType;\n  setErrors: React.Dispatch<React.SetStateAction<ErrorType>>;\n};\n\nconst useStyles = makeStyles({\n  form: {\n    backgroundColor: \"#4BFC7E\",\n    margin: \"0px 10px\",\n  },\n  formGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    padding: \"5px\",\n  },\n  FormLeftLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\",\n  },\n  inputField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/8\",\n  },\n  inputFieldRemarks: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"10px\",\n    gridColumn: \"2/8\",\n    height: \"50px\",\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\",\n  },\n});\n\nconst EmailInfoAdd: React.FC<DemoFormProps> = (props) => {\n  const classes = useStyles();\n  const emailRegex =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n  // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = event.target;\n\n  //   props.setData((prev) => {\n  //     return {\n  //       ...prev,\n  //       [name]: value,\n  //     };\n  //   });\n\n  //   props.setErrors((prev) => ({\n  //     ...prev,\n  //     [name]: \"\",\n  //   }));\n  // };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form}>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 1</FormLabel>\n          <TextField\n            name=\"email1\"\n            className={classes.inputField}\n            required={true}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email1}\n            error={Boolean(props.errors.email1)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                props.handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 2</FormLabel>\n          <TextField\n            name=\"email2\"\n            className={classes.inputField}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email2}\n            error={Boolean(props.errors.email2)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Email 3</FormLabel>\n          <TextField\n            name=\"email3\"\n            className={classes.inputField}\n            InputProps={{ disableUnderline: true }}\n            helperText={props.errors.email3}\n            error={Boolean(props.errors.email3)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(emailRegex)) {\n                handleChange(event);\n              }\n            }}\n          />\n        </div>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormLeftLevel}>Remarks</FormLabel>\n          {/* <TextareaAutosize\n            aria-label=\"minimum height\"\n            minRows={3}\n            className={classes.inputFieldRemarks}\n          /> */}\n          <TextField\n            name=\"remarks\"\n            className={classes.inputFieldRemarks}\n            InputProps={{ disableUnderline: true }}\n            onChange={handleChange}\n            helperText={props.errors.remarks}\n            error={Boolean(props.errors.remarks)}\n          />\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default EmailInfoAdd;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}