{"ast":null,"code":"var _jsxFileName = \"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  form: {\n    display: \"grid\",\n    // gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"auto auto auto\",\n    // gap: \"50px\",\n    // backgroundColor: \"#4BFC7E\",\n    // padding: \"20px 100px\",\n    margin: \"0px 10px\"\n  },\n  formGroup: {\n    gap: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"auto auto auto\",\n    padding: \"10px\",\n    // borderRadius: \"50px\",\n    width: \"450px\"\n  },\n  inputField: {\n    // gap: \"5px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\" // padding: \"10px\",\n    // backgroundColor: \"white\",\n    // borderRadius: \"50px\",\n    // width: \"450px\",\n\n  },\n  formHeading: {\n    textAlign: \"left\",\n    marginLeft: \"150px\"\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\"\n  }\n});\n\nconst BlackInformationAdd = props => {\n  _s();\n\n  const classes = useStyles(); // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    props.setData(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n    props.setErrors(prev => ({ ...prev,\n      [name]: \"\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"black information \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.inputField,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"blackInformation\" // value={props.data.blackInformation}\n            ,\n            onChange: handleChange,\n            helperText: props.errors.blackInformation,\n            error: Boolean(props.errors.blackInformation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"black information note \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.inputField,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"blackInformationNote\" // value={props.data.blackInformationNote}\n            ,\n            onChange: handleChange,\n            helperText: props.errors.blackInformationNote,\n            error: Boolean(props.errors.blackInformationNote)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlackInformationAdd, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BlackInformationAdd;\nexport default BlackInformationAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackInformationAdd\");","map":{"version":3,"names":["React","makeStyles","TextField","useStyles","form","display","gridTemplateColumns","margin","formGroup","gap","padding","width","inputField","formHeading","textAlign","marginLeft","errorMessage","Color","BlackInformationAdd","props","classes","handleChange","event","name","value","target","setData","prev","setErrors","errors","blackInformation","Boolean","blackInformationNote"],"sources":["/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { FormControl, FormControlLabel, makeStyles, Radio, RadioGroup, TextField } from \"@material-ui/core\";\nimport { formDataType, ErrorType } from \"../Homepage\";\n\ntype DemoFormProps = {\n  data: formDataType;\n  setData: React.Dispatch<React.SetStateAction<formDataType>>;\n  errors: ErrorType;\n  setErrors: React.Dispatch<React.SetStateAction<ErrorType>>;\n};\n\nconst useStyles = makeStyles({\n  form: {\n    display: \"grid\",\n    // gridTemplateColumns: \"1fr 1fr 1fr\",\n    gridTemplateColumns: \"auto auto auto\",\n    // gap: \"50px\",\n    // backgroundColor: \"#4BFC7E\",\n    // padding: \"20px 100px\",\n    margin: \"0px 10px\",\n  },\n  formGroup: {\n    gap: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"auto auto auto\",\n\n    padding: \"10px\",\n    // borderRadius: \"50px\",\n    width: \"450px\",\n  },\n  inputField: {\n    // gap: \"5px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr\",\n    // padding: \"10px\",\n    // backgroundColor: \"white\",\n    // borderRadius: \"50px\",\n    // width: \"450px\",\n  },\n  formHeading: {\n    textAlign: \"left\",\n    marginLeft: \"150px\",\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\",\n  },\n});\n\nconst BlackInformationAdd: React.FC<DemoFormProps> = (props) => {\n  const classes = useStyles();\n\n  // ============================== Methods =========================\n\n  /** \n       This Method for get all change on the Input Field\n      */\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    props.setData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n\n    props.setErrors((prev) => ({\n      ...prev,\n      [name]: \"\",\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <form className={classes.form}>\n        <div className={classes.formGroup}>\n          <label>black information </label>\n          <div className={classes.inputField}>\n            <TextField\n              name=\"blackInformation\"\n              // value={props.data.blackInformation}\n              onChange={handleChange}\n              helperText={props.errors.blackInformation}\n              error={Boolean(props.errors.blackInformation)}\n            />\n          </div>\n        </div>\n\n        <div className={classes.formGroup}>\n          <label>black information note </label>\n          <div className={classes.inputField}>\n            <TextField\n              name=\"blackInformationNote\"\n              // value={props.data.blackInformationNote}\n              onChange={handleChange}\n              helperText={props.errors.blackInformationNote}\n              error={Boolean(props.errors.blackInformationNote)}\n            />\n          </div>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default BlackInformationAdd;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAwCC,UAAxC,EAAuEC,SAAvE,QAAwF,mBAAxF;;AAUA,MAAMC,SAAS,GAAGF,UAAU,CAAC;EAC3BG,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJ;IACAC,mBAAmB,EAAE,gBAHjB;IAIJ;IACA;IACA;IACAC,MAAM,EAAE;EAPJ,CADqB;EAU3BC,SAAS,EAAE;IACTC,GAAG,EAAE,MADI;IAETJ,OAAO,EAAE,MAFA;IAGTC,mBAAmB,EAAE,gBAHZ;IAKTI,OAAO,EAAE,MALA;IAMT;IACAC,KAAK,EAAE;EAPE,CAVgB;EAmB3BC,UAAU,EAAE;IACV;IACAP,OAAO,EAAE,MAFC;IAGVC,mBAAmB,EAAE,aAHX,CAIV;IACA;IACA;IACA;;EAPU,CAnBe;EA4B3BO,WAAW,EAAE;IACXC,SAAS,EAAE,MADA;IAEXC,UAAU,EAAE;EAFD,CA5Bc;EAgC3BC,YAAY,EAAE;IACZC,KAAK,EAAE,KADK;IAEZP,OAAO,EAAE;EAFG;AAhCa,CAAD,CAA5B;;AAsCA,MAAMQ,mBAA4C,GAAIC,KAAD,IAAW;EAAA;;EAC9D,MAAMC,OAAO,GAAGjB,SAAS,EAAzB,CAD8D,CAG9D;;EAEA;AACF;AACA;;EACE,MAAMkB,YAAY,GAAIC,KAAD,IAAgD;IACnE,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IAEAN,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAU;MACtB,OAAO,EACL,GAAGA,IADE;QAEL,CAACJ,IAAD,GAAQC;MAFH,CAAP;IAID,CALD;IAOAL,KAAK,CAACS,SAAN,CAAiBD,IAAD,KAAW,EACzB,GAAGA,IADsB;MAEzB,CAACJ,IAAD,GAAQ;IAFiB,CAAX,CAAhB;EAID,CAdD;;EAgBA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAM,SAAS,EAAEH,OAAO,CAAChB,IAAzB;MAAA,wBACE;QAAK,SAAS,EAAEgB,OAAO,CAACZ,SAAxB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAEY,OAAO,CAACR,UAAxB;UAAA,uBACE,QAAC,SAAD;YACE,IAAI,EAAC,kBADP,CAEE;YAFF;YAGE,QAAQ,EAAES,YAHZ;YAIE,UAAU,EAAEF,KAAK,CAACU,MAAN,CAAaC,gBAJ3B;YAKE,KAAK,EAAEC,OAAO,CAACZ,KAAK,CAACU,MAAN,CAAaC,gBAAd;UALhB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAcE;QAAK,SAAS,EAAEV,OAAO,CAACZ,SAAxB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAEY,OAAO,CAACR,UAAxB;UAAA,uBACE,QAAC,SAAD;YACE,IAAI,EAAC,sBADP,CAEE;YAFF;YAGE,QAAQ,EAAES,YAHZ;YAIE,UAAU,EAAEF,KAAK,CAACU,MAAN,CAAaG,oBAJ3B;YAKE,KAAK,EAAED,OAAO,CAACZ,KAAK,CAACU,MAAN,CAAaG,oBAAd;UALhB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAvDD;;GAAMd,mB;UACYf,S;;;KADZe,mB;AAyDN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}