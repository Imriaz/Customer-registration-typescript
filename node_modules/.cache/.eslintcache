[{"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/index.tsx":"1","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/reportWebVitals.ts":"2","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/App.tsx":"3","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Homepage/index.tsx":"4","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Footer/index.tsx":"5","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Navbar/index.tsx":"6","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/ContactInfoAdd/index.tsx":"7","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BasicInfoAdd/index.tsx":"8","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmployeeList/index.tsx":"9","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/NotFound/index.tsx":"10","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx":"11","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/CustomerIdentityAdd/index.tsx":"12","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx":"13","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/CustomerSIAdd/index.tsx":"14","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/MyInputField/index.tsx":"15"},{"size":641,"mtime":1660715468522,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1660714394718,"results":"18","hashOfConfig":"17"},{"size":439,"mtime":1660729856318,"results":"19","hashOfConfig":"17"},{"size":7908,"mtime":1661450053188,"results":"20","hashOfConfig":"17"},{"size":389,"mtime":1660729896331,"results":"21","hashOfConfig":"17"},{"size":5407,"mtime":1661228440870,"results":"22","hashOfConfig":"17"},{"size":5549,"mtime":1661483642339,"results":"23","hashOfConfig":"17"},{"size":7187,"mtime":1661487345766,"results":"24","hashOfConfig":"17"},{"size":2678,"mtime":1661156511649,"results":"25","hashOfConfig":"17"},{"size":166,"mtime":1660716100288,"results":"26","hashOfConfig":"17"},{"size":4073,"mtime":1661483594102,"results":"27","hashOfConfig":"17"},{"size":2885,"mtime":1661493661127,"results":"28","hashOfConfig":"17"},{"size":1980,"mtime":1661483944631,"results":"29","hashOfConfig":"17"},{"size":18136,"mtime":1661495006879,"results":"30","hashOfConfig":"17"},{"size":1909,"mtime":1661482970228,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3i0xhy",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/reportWebVitals.ts",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/App.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Homepage/index.tsx",["78"],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Footer/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/Navbar/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/ContactInfoAdd/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BasicInfoAdd/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmployeeList/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/NotFound/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/EmailInfoAdd/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/CustomerIdentityAdd/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/BlackInformationAdd/index.tsx",[],[],"/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/CustomerSIAdd/index.tsx",["79"],[],"import React from \"react\";\nimport {\n  Box,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Modal,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { formDataType } from \"../Homepage\";\nimport { ErrorType } from \"../Homepage\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { MoreHoriz } from \"@mui/icons-material\";\nimport MyInputField from \"../MyInputField\";\n\ntype DemoFormProps = {\n  data: formDataType;\n  setData: React.Dispatch<React.SetStateAction<formDataType>>;\n  errors: ErrorType;\n  setErrors: React.Dispatch<React.SetStateAction<ErrorType>>;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst useStyles = makeStyles({\n  form: {\n    border: \"1px solid black\",\n    padding: \"5px\",\n    margin: \"10px\",\n  },\n  formGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(8, 1fr)\",\n    padding: \"0px 15px 0px 5px\",\n    gap: \"5px\",\n    alignItems: \"center\",\n  },\n  inputField: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/3\",\n    height: \"25px\",\n    marginBottom: \"5px\",\n    \"& .MuiFormHelperText-root\": {\n      marginTop: \"-9px\",\n      marginLeft: \"5px\",\n      fontSize: \"12px\",\n    },\n  },\n  inputFieldLeftLarge: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"2/4\",\n    height: \"25px\",\n    marginBottom: \"5px\",\n    \"& .MuiFormHelperText-root\": {\n      marginTop: \"-9px\",\n      marginLeft: \"5px\",\n      fontSize: \"12px\",\n    },\n  },\n  inputFieldRight: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"6/7\",\n    height: \"25px\",\n    marginBottom: \"5px\",\n    \"& .MuiFormHelperText-root\": {\n      marginTop: \"-9px\",\n      marginLeft: \"5px\",\n      fontSize: \"12px\",\n    },\n  },\n  inputFieldRightLarge: {\n    border: \"1px solid black\",\n    backgroundColor: \"white\",\n    borderRadius: \"50px\",\n    gridColumn: \"6/8\",\n    height: \"25px\",\n    marginBottom: \"5px\",\n    \"& .MuiFormHelperText-root\": {\n      marginTop: \"-9px\",\n      marginLeft: \"5px\",\n      fontSize: \"12px\",\n    },\n  },\n  FormLeftLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\",\n    \"&.MuiFormLabel-root\": {\n      fontSize: \"12px\",\n    },\n    width: \"110px\",\n    textAlign: \"right\",\n  },\n  FormTitleLevel: {\n    gridColumn: \"1/5\",\n    textAlign: \"left\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    fontSize: \"12px\",\n\n    // \"&.MuiFormLabel-root\": {\n    //   fontSize: \"12px\",\n    // },\n  },\n  FormRightLevel: {\n    gridColumn: \"5/6\",\n    color: \"black\",\n    \"&.MuiFormLabel-root\": {\n      fontSize: \"12px\",\n    },\n    width: \"110px\",\n    textAlign: \"right\",\n  },\n  RejectionTitleLevel: {\n    gridColumn: \"1/5\",\n    textAlign: \"left\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    fontSize: \"12px\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: \"transparent\",\n    border: \"2px solid #000\",\n    padding: \"300px\",\n  },\n  noneLevel: {\n    gridColumn: \"2/3\",\n    color: \"black\",\n    fontSize: \"12px\",\n    // \"&.MuiFormLabel-root\": {\n    //   fontSize: \"12px\",\n    // },\n  },\n  borderButton: {\n    border: \"1px solid black\",\n    borderRadius: \"50px\",\n    \"&.css-i4bv87-MuiSvgIcon-root\": {\n      height: \"18px\",\n      width: \"18px\",\n    },\n  },\n  radioButtonGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    // gridColumn: \"6/8\",\n  },\n  FormSelectButton1: {\n    gridColumn: \"6/7\",\n    color: \"black\",\n    \"&.MuiFormLabel-root\": {\n      fontSize: \"12px\",\n    },\n  },\n  FormSelectButton2: {\n    gridColumn: \"7/8\",\n    color: \"black\",\n    \"&.MuiFormLabel-root\": {\n      fontSize: \"12px\",\n    },\n  },\n  inputCheckbox1: {\n    gridColumn: \"1/2\",\n    width: \"120px\",\n    \"&.MuiFormControlLabel-root\": {\n      marginLeft: \"-5px\",\n      marginRight: \"0px\",\n    },\n  },\n  inputCheckbox2: {\n    gridColumn: \"2/6\",\n    \"&.MuiFormControlLabel-root\": {\n      marginLeft: \"-5px\",\n      marginRight: \"0px\",\n    },\n  },\n  checkboxTitle: {\n    fontSize: \"12px\",\n    marginLeft: \"-5px\",\n  },\n  CallCenterLevel: {\n    gridColumn: \"2/4\",\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n  },\n  firstStoreLevel: {\n    gridColumn: \"1/2\",\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n  },\n  RegDateLevel: {\n    gridColumn: \"5/8\",\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n  },\n  errorMessage: {\n    Color: \"red\",\n    padding: \"10px\",\n  },\n});\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst CustomerSIAdd: React.FC<DemoFormProps> = (props) => {\n  const discountRegex = \"^[0-9.]+$|^$\";\n\n  const classes = useStyles();\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formatYmd = (date: Date) => date.toISOString().slice(0, 10);\n\n  return (\n    <React.Fragment>\n      <form className={classes.form}>\n        <div className={classes.formGroup}>\n          <FormLabel className={classes.FormTitleLevel}>\n            Customer Supplementary Information\n          </FormLabel>\n          <MyInputField\n            labelText=\"requester\"\n            labelClass={classes.FormRightLevel}\n            name=\"requester\"\n            required={false}\n            textFieldClass={classes.inputFieldRightLarge}\n            handleChange={props.handleChange}\n            helperText={props.errors.requester}\n            error={Boolean(props.errors.requester)}\n          />\n          <SearchIcon className={classes.borderButton} />\n          <MyInputField\n            labelText=\"region code\"\n            labelClass={classes.FormLeftLevel}\n            name=\"regionCode\"\n            required={false}\n            textFieldClass={classes.inputFieldLeftLarge}\n            handleChange={props.handleChange}\n            helperText={props.errors.regionCode}\n            error={Boolean(props.errors.regionCode)}\n          />\n          <FormLabel className={classes.FormRightLevel}>receipt</FormLabel>\n          {/* <div className={classes.radioButtonGroup}>\n            <RadioGroup\n              name=\"customerType\"\n              onChange={props.handleChange}\n              // className={classes.FormRightLevel}\n            >\n              <FormControlLabel\n                value=\"requirement\"\n                control={<Radio size=\"small\" color=\"primary\"/>}\n                // className={classes.FormSelectButton1}\n                label={\n                  <Typography style={{ fontSize: \"12px\" }}>\n                    requirement\n                  </Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"notRequirement\"\n                control={<Radio size=\"small\" color=\"primary\"/>}\n                // className={classes.FormSelectButton2}\n                label={\n                  <Typography style={{ fontSize: \"12px\" }}>\n                    don't want\n                  </Typography>\n                }\n              />\n            </RadioGroup>\n          </div> */}\n          {/* <FormControlLabel\n            value=\"requirement\"\n            control={<Radio size=\"small\" color=\"primary\"/>}\n            label=\"requirement\"\n            className={classes.FormSelectButton1}\n          />\n          <FormControlLabel\n            value=\"notRequirement\"\n            control={<Radio size=\"small\" color=\"primary\"/>}\n            label=\"don't want\"\n            className={classes.FormSelectButton2}\n          /> */}\n          <FormLabel className={classes.FormLeftLevel}>Gender</FormLabel>\n          <button\n            className={classes.inputField}\n            type=\"button\"\n            onClick={handleOpen}\n          >\n            <MoreHoriz />\n          </button>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div style={modalStyle} className={classes.paper}>\n              <FormControl component=\"fieldset\">\n                <FormLabel>Select an option:</FormLabel>\n                <RadioGroup\n                  aria-label=\"gender\"\n                  name=\"gender\"\n                  onChange={props.handleChange}\n                  value={props.data?.gender}\n                >\n                  <FormControlLabel\n                    value=\"Male\"\n                    control={<Radio size=\"small\" color=\"primary\" />}\n                    label={<Typography>Male</Typography>}\n                  />\n                  <FormControlLabel\n                    value=\"Female\"\n                    control={<Radio size=\"small\" color=\"primary\" />}\n                    label={<Typography>Female</Typography>}\n                  />\n                  <FormControlLabel\n                    value=\"Others\"\n                    control={<Radio size=\"small\" color=\"primary\" />}\n                    label={<Typography>Others</Typography>}\n                  />\n                </RadioGroup>\n              </FormControl>\n            </div>\n          </Modal>\n          <MyInputField\n            labelText=\"Receipt address\"\n            labelClass={classes.FormRightLevel}\n            name=\"receiptAddress\"\n            required={false}\n            textFieldClass={classes.inputFieldRightLarge}\n            handleChange={props.handleChange}\n            helperText={props.errors.receiptAddress}\n            error={Boolean(props.errors.receiptAddress)}\n          />\n          <MyInputField\n            labelText=\"Age\"\n            labelClass={classes.FormLeftLevel}\n            name=\"age\"\n            required={false}\n            textFieldClass={classes.inputFieldLeftLarge}\n            handleChange={props.handleChange}\n            helperText={props.errors.age}\n            error={Boolean(props.errors.age)}\n          />\n          <FormLabel className={classes.FormRightLevel}>\n            Discount rate\n          </FormLabel>\n          <TextField\n            name=\"discountRate\"\n            value={props.data.discountRate}\n            required={false}\n            InputProps={{\n              disableUnderline: true,\n              style: { fontSize: \"12px\", padding: \"0px 10px\" },\n            }}\n            className={classes.inputFieldRight}\n            helperText={props.errors.discountRate}\n            error={Boolean(props.errors.discountRate)}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              if (event.target.value.match(discountRegex)) {\n                props.handleChange(event);\n              }\n            }}\n          />\n          <Typography style={{ textAlign: \"left\", fontSize: \"16px\" }}>\n            %\n          </Typography>\n          <MyInputField\n            labelText=\"Customer factor\"\n            labelClass={classes.FormLeftLevel}\n            name=\"customerFactor\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerFactor}\n            error={Boolean(props.errors.customerFactor)}\n          />\n          <FormLabel className={classes.FormRightLevel}>\n            Discount rate memo\n          </FormLabel>\n          <MoreHoriz className={classes.borderButton} />\n          <MyInputField\n            labelText=\"Classification code\"\n            labelClass={classes.FormLeftLevel}\n            name=\"classificationCode\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.classificationCode}\n            error={Boolean(props.errors.classificationCode)}\n          />\n          <MyInputField\n            labelText=\"Urge to distinguish\"\n            labelClass={classes.FormRightLevel}\n            name=\"distinguish\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.distinguish}\n            error={Boolean(props.errors.distinguish)}\n          />\n          <MyInputField\n            labelText=\"Order category\"\n            labelClass={classes.FormLeftLevel}\n            name=\"orderCategory\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.orderCategory}\n            error={Boolean(props.errors.orderCategory)}\n          />\n          <MyInputField\n            labelText=\"Closing date classification\"\n            labelClass={classes.FormRightLevel}\n            name=\"closingDate\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.closingDate}\n            error={Boolean(props.errors.closingDate)}\n          />\n          <MyInputField\n            labelText=\"Collection method\"\n            labelClass={classes.FormLeftLevel}\n            name=\"collectionMethod\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.collectionMethod}\n            error={Boolean(props.errors.collectionMethod)}\n          />\n          <MyInputField\n            labelText=\"Customer generic 1\"\n            labelClass={classes.FormRightLevel}\n            name=\"customerGen1\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerGen1}\n            error={Boolean(props.errors.customerGen1)}\n          />\n          <MyInputField\n            labelText=\"Last store CD\"\n            labelClass={classes.FormLeftLevel}\n            name=\"lastStoreCD\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.lastStoreCD}\n            error={Boolean(props.errors.lastStoreCD)}\n          />\n          <MyInputField\n            labelText=\"Customer generic 2\"\n            labelClass={classes.FormRightLevel}\n            name=\"customerGen2\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerGen2}\n            error={Boolean(props.errors.customerGen2)}\n          />\n          <MyInputField\n            labelText=\"customer rank\"\n            labelClass={classes.FormLeftLevel}\n            name=\"customerRank\"\n            required={false}\n            textFieldClass={classes.inputField}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerRank}\n            error={Boolean(props.errors.customerRank)}\n          />\n          <MyInputField\n            labelText=\"Customer generic 3\"\n            labelClass={classes.FormRightLevel}\n            name=\"customerGen3\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerGen3}\n            error={Boolean(props.errors.customerGen3)}\n          />\n          <FormLabel className={classes.FormLeftLevel}>\n            credit registration\n          </FormLabel>\n          <FormLabel className={classes.noneLevel}>none</FormLabel>\n          <MoreHoriz className={classes.borderButton} />\n          <MyInputField\n            labelText=\"Customer generic 4\"\n            labelClass={classes.FormRightLevel}\n            name=\"customerGen4\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerGen4}\n            error={Boolean(props.errors.customerGen4)}\n          />\n\n          <FormLabel className={classes.RejectionTitleLevel}>\n            Rejection management\n          </FormLabel>\n          {/* <FormLabel className={classes.FormLeftLevel}>\n            Rejection management\n          </FormLabel> */}\n          <MyInputField\n            labelText=\"Customer generic 5\"\n            labelClass={classes.FormRightLevel}\n            name=\"customerGen5\"\n            required={false}\n            textFieldClass={classes.inputFieldRight}\n            handleChange={props.handleChange}\n            helperText={props.errors.customerGen5}\n            error={Boolean(props.errors.customerGen5)}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={props.handleChange}\n                color=\"primary\"\n                value=\"do not send DM\"\n                name=\"doNotSDM\"\n                size=\"small\"\n              />\n            }\n            className={classes.inputCheckbox1}\n            label={\n              <Typography className={classes.checkboxTitle}>\n                do not send DM\n              </Typography>\n            }\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={props.handleChange}\n                color=\"primary\"\n                value=\"do not issue a purchase order\"\n                name=\"doNotIPO\"\n                size=\"small\"\n              />\n            }\n            className={classes.inputCheckbox2}\n            label={\n              <Typography className={classes.checkboxTitle}>\n                do not issue a purchase order\n              </Typography>\n            }\n          />\n          <FormLabel className={classes.firstStoreLevel}>\n            First store CD\n          </FormLabel>\n          <FormLabel className={classes.CallCenterLevel}>call center</FormLabel>\n          <FormLabel className={classes.RegDateLevel}>\n            registration date {formatYmd(new Date())}\n          </FormLabel>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default CustomerSIAdd;\n","/home/imriaz/Imriaz Uddin/OJT/customer-form/src/components/MyInputField/index.tsx",["80","81"],[],{"ruleId":"82","severity":1,"message":"83","line":117,"column":9,"nodeType":"84","messageId":"85","endLine":117,"endColumn":19},{"ruleId":"82","severity":1,"message":"86","line":3,"column":3,"nodeType":"84","messageId":"85","endLine":3,"endColumn":6},{"ruleId":"82","severity":1,"message":"87","line":63,"column":5,"nodeType":"84","messageId":"85","endLine":63,"endColumn":10},{"ruleId":"82","severity":1,"message":"88","line":70,"column":9,"nodeType":"84","messageId":"85","endLine":70,"endColumn":16},"@typescript-eslint/no-unused-vars","'navigation' is assigned a value but never used.","Identifier","unusedVar","'Box' is defined but never used.","'width' is assigned a value but never used.","'classes' is assigned a value but never used."]